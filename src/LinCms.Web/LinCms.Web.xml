<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LinCms.Web</name>
    </assembly>
    <members>
        <member name="M:LinCms.Web.Controllers.Blog.ArticleController.DeleteMyArticle(System.Guid)">
            <summary>
            删除自己的随笔
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.ArticleController.Delete(System.Guid)">
            <summary>
            管理员删除违规随笔
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.ArticleController.Get(LinCms.Application.Contracts.Blog.Articles.Dtos.ArticleSearchDto)">
            <summary>
            我所有的随笔
            </summary>
            <param name="searchDto"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.ArticleController.GetArticleAsync(LinCms.Application.Contracts.Blog.Articles.Dtos.ArticleSearchDto)">
            <summary>
            得到所有已审核过的随笔,最新的随笔/三天、七天、月榜、全部
            </summary>
            <param name="searchDto"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.ArticleController.GetAllArticles(LinCms.Application.Contracts.Blog.Articles.Dtos.ArticleSearchDto)">
            <summary>
            得到所有已审核过的随笔
            </summary>
            <param name="searchDto"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.ArticleController.GetAsync(System.Guid)">
            <summary>
            随笔详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.ArticleController.AuditAsync(System.Guid,System.Boolean)">
            <summary>
            审核随笔-拉黑/取消拉黑
            </summary>
            <param name="id">审论Id</param>
            <param name="isAudit"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.ArticleController.GetSubscribeArticleAsync(LinCms.Core.Data.PageDto)">
            <summary>
            得到我关注的人发布的随笔
            </summary>
            <param name="pageDto"></param>
            <returns></returns>
        </member>
        <member name="T:LinCms.Web.Controllers.Blog.ArticleDraftController">
            <summary>
            文章草稿箱，自动保存文章
            </summary>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.ArticleDraftController.GetAsync(System.Guid)">
            <summary>
            用户的随笔草稿详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:LinCms.Web.Controllers.Blog.ChannelController">
            <summary>
            技术频道
            </summary>
        </member>
        <member name="T:LinCms.Web.Controllers.Blog.CommentController">
            <summary>
            随笔评论
            </summary>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.CommentController.GetListByArticleAsync(LinCms.Application.Contracts.Blog.Comments.Dtos.CommentSearchDto)">
            <summary>
            评论分页列表页,当随笔Id有值时，查询出此随笔的评论
            </summary>
            <param name="commentSearchDto"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.CommentController.GetListAsync(LinCms.Application.Contracts.Blog.Comments.Dtos.CommentSearchDto)">
            <summary>
            后台权限-评论列表页
            </summary>
            <param name="commentSearchDto"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.CommentController.DeleteAsync(System.Guid)">
            <summary>
            后台权限-删除评论
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.CommentController.DeleteMyComment(System.Guid)">
            <summary>
            用户仅可删除自己的评论
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.CommentController.CreateAsync(LinCms.Application.Contracts.Blog.Comments.Dtos.CreateCommentDto)">
            <summary>
            用户评论
            </summary>
            <param name="createCommentDto"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.CommentController.UpdateAsync(System.Guid,System.Boolean)">
            <summary>
            审核评论-拉黑/取消拉黑
            </summary>
            <param name="id">审论Id</param>
            <param name="isAudit"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.CommentController.CorrectedComment(System.Guid,System.Int32)">
            <summary>
            评论-校正评论量,subjectType(1：文章)
            </summary>
            <param name="subjectId"></param>
            <param name="subjectType"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.TagController.CorrectedTagCountAsync(System.Guid)">
            <summary>
            标签-校正标签对应文章数量
            </summary>
            <param name="tagId"></param>
            <returns></returns>
        </member>
        <member name="T:LinCms.Web.Controllers.Blog.UserLikeController">
            <summary>
             用户点赞随笔
            </summary>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.UserLikeController.CreateOrCancelAsync(LinCms.Application.Contracts.Blog.UserLikes.Dtos.CreateUpdateUserLikeDto)">
            <summary>
            用户点赞/取消点赞文章、评论 
            </summary>
            <param name="createUpdateUserLike"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.UserLikeController.PublishUserLikeNotification(LinCms.Application.Contracts.Blog.UserLikes.Dtos.CreateUpdateUserLikeDto,System.Boolean)">
            <summary>
            根据用户点赞类型：文章、评论，得到消息的NotificationRespUserId的值
            </summary>
            <param name="createUpdateUserLike"></param>
            <returns></returns>
        </member>
        <member name="T:LinCms.Web.Controllers.Blog.UserSubscribeController">
            <summary>
            用户订阅
            </summary>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.UserSubscribeController.Get(System.Int64)">
            <summary>
            判断当前登录的用户是否关注了beSubscribeUserId
            </summary>
            <param name="subscribeUserId"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.UserSubscribeController.DeleteAsync(System.Int64)">
            <summary>
            取消关注用户
            </summary>
            <param name="subscribeUserId"></param>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.UserSubscribeController.Post(System.Int64)">
            <summary>
            关注用户
            </summary>
            <param name="subscribeUserId"></param>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.UserSubscribeController.GetUserSubscribeeeList(LinCms.Application.Contracts.Blog.UserSubscribes.Dtos.UserSubscribeSearchDto)">
            <summary>
            得到某个用户的关注
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.UserSubscribeController.GetUserFansList(LinCms.Application.Contracts.Blog.UserSubscribes.Dtos.UserSubscribeSearchDto)">
            <summary>
            得到某个用户的粉丝
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.UserSubscribeController.GetUserSubscribeInfo(System.Int64)">
            <summary>
            得到某个用户的关注了、关注者、标签总数
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.UserTagController.CreateUserTagAsync(System.Guid)">
            <summary>
            用户关注标签
            </summary>
            <param name="tagId"></param>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.UserTagController.DeleteUserTagAsync(System.Guid)">
            <summary>
            取消关注标签
            </summary>
            <param name="tagId"></param>
        </member>
        <member name="M:LinCms.Web.Controllers.Blog.UserTagController.GetUserTagList(LinCms.Application.Contracts.Blog.UserSubscribes.Dtos.UserSubscribeSearchDto)">
            <summary>
            得到某个用户关注的标签
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.AccountController.Login(LinCms.Application.Contracts.Cms.Account.LoginInputDto)">
            <summary>
            登录接口
            </summary>
            <param name="loginInputDto">用户名/密码：admin/123qwe</param>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.AccountController.GetRefreshToken">
            <summary>
            刷新用户的token
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.AccountController.Post(LinCms.Application.Contracts.Cms.Account.RegisterDto)">
            <summary>
            注册
            </summary>
            <param name="registerDto"></param>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.AdminController.GetUserListByGroupId(LinCms.Application.Contracts.Cms.Admins.Dtos.UserSearchDto)">
            <summary>
            用户信息分页列表项
            </summary>
            <param name="searchDto"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.AdminController.UpdateAsync(System.Int64,LinCms.Application.Contracts.Cms.Admins.Dtos.UpdateUserDto)">
            <summary>
            修改用户信息
            </summary>
            <param name="id"></param>
            <param name="updateUserDto"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.AdminController.DeleteAsync(System.Int64)">
            <summary>
            删除用户
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.AdminController.ResetPasswordAsync(System.Int64,LinCms.Application.Contracts.Cms.Admins.Dtos.ResetPasswordDto)">
            <summary>
            重置密码
            </summary>
            <param name="id">用户id</param>
            <param name="resetPasswordDto"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.FileController.UploadFiles">
            <summary>
            多文件上传
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.FileController.UploadAsync(Microsoft.AspNetCore.Http.IFormFile,System.Int32)">
            <summary>
            单文件上传，键为file
            </summary>
            <param name="file"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.LogController.GetUsers(LinCms.Core.Data.PageDto)">
            <summary>
            查询日志记录的用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.LogController.GetLogs(LinCms.Application.Contracts.Cms.Logs.Dtos.LogSearchDto)">
            <summary>
            日志浏览（人员，时间），分页展示
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.LogController.GetUserLogs(LinCms.Application.Contracts.Cms.Logs.Dtos.LogSearchDto)">
            <summary>
            日志搜素（人员，时间）（内容）， 分页展示
            </summary>
            <param name="searchDto"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.Oauth2Controller.Home(System.String,System.String)">
            <summary>
            授权成功后自动回调的地址
            </summary>
            <param name="provider"></param>
            <param name="redirectUrl">授权成功后的跳转地址</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:LinCms.Web.Controllers.Cms.Oauth2Controller.SignIn(System.String,System.String)" -->
        <member name="M:LinCms.Web.Controllers.Cms.Oauth2Controller.OpenId(System.String)">
            <summary>
            通过axios请求得到null，浏览器直接打开能得到github的id 
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.Oauth2Controller.GetOpenIdByToken">
            <summary>
            通过axios请求，请在header（请求头）携带上文中signin-callback生成的Token值.可以得到openid
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.PermissionController.GetAllPermissions">
            <summary>
            查询所有可分配的权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.PermissionController.RemovePermissions(LinCms.Application.Contracts.Cms.Permissions.Dtos.RemovePermissionDto)">
            <summary>
            删除某个组别的权限
            </summary>
            <param name="permissionDto"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.PermissionController.DispatchPermissions(LinCms.Application.Contracts.Cms.Permissions.Dtos.DispatchPermissionsDto)">
            <summary>
            分配多个权限
            </summary>
            <param name="permissionDto"></param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.UserController.CreateAsync(LinCms.Application.Contracts.Cms.Users.Dtos.CreateUserDto)">
            <summary>
            新增用户-不是注册，注册不可能让用户选择gourp_id
            </summary>
            <param name="userInput"></param>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.UserController.GetInformationAsync">
            <summary>
            得到当前登录人信息
            </summary>
        </member>
        <member name="M:LinCms.Web.Controllers.Cms.UserController.Permissions">
            <summary>
            查询自己拥有的权限
            </summary>
            <returns></returns>
        </member>
        <member name="T:LinCms.Web.Controllers.v1.QiniuController">
            <summary>
            七牛云上传服务
            </summary>
        </member>
        <member name="M:LinCms.Web.Controllers.v1.QiniuController.UploadTagByJson">
            <summary>
            将掘金中的取所有标签存到七牛云上，基本信息存入数据库
            从百度云下载后，放到wwwwroot中，swagger上执行下此方法，需要等很久，提取其中的tags，将Icon上传到七牛云上，tag信息存到数据库中。
            链接: https://pan.baidu.com/s/1f7DSCC3uNOyiu3st9F1OAQ 提取码: paqf 
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.v1.QiniuController.GetUrlFormFile(System.String)">
            <summary>
            获取远程服务器内容，并转换成流
            </summary>
            <param name="path">https://lc-gold-cdn.xitu.io/bac28828a49181c34110.png</param>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.v1.TestController.Get">
            <summary>
            下划线，首字母会小写
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.v1.TestController.GetDictionary">
            <summary>
            这种方式不会变小写，怀疑人生，是不是他的key不是键？ https://github.com/JamesNK/Newtonsoft.Json/issues/2088
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Controllers.MonitorController.GetServerInfo">
            <summary>
            服务器配置信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:LinCms.Web.Controllers.ServerViewModel">
            <summary>
            服务器VM
            </summary>
        </member>
        <member name="P:LinCms.Web.Controllers.ServerViewModel.EnvironmentName">
            <summary>
            环境变量
            </summary>
        </member>
        <member name="P:LinCms.Web.Controllers.ServerViewModel.OSArchitecture">
            <summary>
            系统架构
            </summary>
        </member>
        <member name="P:LinCms.Web.Controllers.ServerViewModel.ContentRootPath">
            <summary>
            ContentRootPath
            </summary>
        </member>
        <member name="P:LinCms.Web.Controllers.ServerViewModel.WebRootPath">
            <summary>
            WebRootPath
            </summary>
        </member>
        <member name="P:LinCms.Web.Controllers.ServerViewModel.FrameworkDescription">
            <summary>
            .NET Core版本
            </summary>
        </member>
        <member name="P:LinCms.Web.Controllers.ServerViewModel.MemoryFootprint">
            <summary>
            内存占用
            </summary>
        </member>
        <member name="P:LinCms.Web.Controllers.ServerViewModel.WorkingTime">
            <summary>
            启动时间
            </summary>
        </member>
        <member name="M:LinCms.Web.Data.DataSeedContributor.SeedAsync">
            <summary>
            权限标签上的Permission改变时，删除数据库中存在的无效权限，并生成新的权限。
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Middleware.UnitOfWorkAsyncInterceptor.InterceptSynchronous(Castle.DynamicProxy.IInvocation)">
            <summary>
            拦截同步执行的方法
            </summary>
            <param name="invocation"></param>
        </member>
        <member name="M:LinCms.Web.Middleware.UnitOfWorkAsyncInterceptor.InterceptAsynchronous(Castle.DynamicProxy.IInvocation)">
            <summary>
            拦截返回结果为Task的方法
            </summary>
            <param name="invocation"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:LinCms.Web.Middleware.UnitOfWorkAsyncInterceptor.InterceptAsynchronous``1(Castle.DynamicProxy.IInvocation)" -->
        <member name="T:LinCms.Web.SnakeCaseQuery.SnakeCaseQueryValueProvider">
            <summary>
            下划线写法（SnakeCase）
            </summary>
        </member>
        <member name="M:LinCms.Web.Startup.DependencyInjectionExtensions.AddContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            FreeSql
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:LinCms.Web.Startup.DependencyInjectionExtensions.AddIpRateLimiting(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            配置限流依赖的服务
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:LinCms.Web.Utils.ReflexHelper">
            <summary>
            反射帮助类
            </summary>
        </member>
        <member name="M:LinCms.Web.Utils.ReflexHelper.GeAssemblyLinCmsAttributes">
            <summary>
            通过反射得到LinCmsAttrbutes所有权限结构，为树型权限生成做准备
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Utils.ReflexHelper.AuthorizationConvertToTree(System.Collections.Generic.List{LinCms.Core.Data.PermissionDefinition})">
                         {
                                "信息":{
                                    "查看lin的信息":[
                                        "cms.test+info"
                                    ]
                                },
                                "图书":{
                                    "删除图书":[
                                        "v1.book+delete_book"
                                    ]
                                },
                                "日志":{
                                    "搜索日志":[
                                        "cms.log+get_user_logs"
                                    ],
                                    "查询所有日志":[
                                        "cms.log+get_logs"
                                    ],
                                    "查询日志记录的用户":[
                                        "cms.log+get_users"
                                    ]
                                }
                        }
            <summary>
            使用动态 ExpandoObject结构实现前台需要的奇怪的JSON格式
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Utils.ReflexHelper.GetEntityTypes(System.Type)">
            <summary>
            扫描 IEntity类所在程序集，反射得到所有类上有特性标签为TableAttribute
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinCms.Web.Utils.StopWords.ReplaceStopWords(System.String)">
            <summary>
            替换所有敏感词为 *
            </summary>
            <param name="that"></param>
            <returns></returns>
        </member>
        <member name="T:LinCms.Web.Utils.ToolGoodUtils">
            <summary>
            ToolGood.Words类库配合敏感库
            </summary>
        </member>
        <member name="M:LinCms.Web.Utils.ToolGoodUtils.GetIllegalWordsSearch">
            <summary>
            本地敏感库,文件修改后，重新创建缓存Bit
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
